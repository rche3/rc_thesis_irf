function resid = proj_w_resid(input_vec_position, Y, IV_location, nlags, h, include_proxy)
% input_vec_position defines the column of Y (the data matrix) that is going to be projected on the control
% include_proxy, 0 = only set the lagged y_{t-1}... y_{t-p} as control, 1 = include "future" z_t

% To get the residuals, we need the input vector, control vector (for proj matrix)
input_vector = Y(:, input_vec_position);
T = size(input_vector, 1);
y = Y(:, IV_location+1:end);
z = Y(:, IV_location);
K = size(Y_ex_z, 2);

% create lagged y's
% lagged_y_col = zeros(T-h-nlags, 1+K*nlags+h)

% for i:nlags
lagged_y = lagmatrix(y, 1:nlags);

if include_proxy == 1
    if h==0
        W = [ones(1,T-h-nlags), lagged_y(nlags+1:end-h, :)];
    else 
        lagged_z = lagmatrix(z, 0:h-1);
        W = [ones(1,T-h-nlags), lagged_y(nlags+1:end-h, :), z(nlags+h+1:end)];
    end
else
    W = [ones(1,T-h-nlags), lagged_y(nlags+1:end-h, :)];
end
% ^ column of lagged y's stacked as [y_{t-1}; y_{t-2}; ... y_{t-p}]
input_vector = input_vector(nlags+1+h:end);

resid = input_vector - W * inv(W' * W) * W' * input_vector

end

